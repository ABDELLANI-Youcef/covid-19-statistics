{"version":3,"sources":["styles/History.module.css","styles/GlobalInformations.module.css","styles/CountryItem.module.css","styles/Detail.module.css","styles/List.module.css","styles/Navbar.module.css","styles/GeneralDetail.module.css","actions/index.js","reducers/filter.js","reducers/cases.js","components/CountryItem.js","components/FilterForm.js","components/GlobalInformations.js","containers/List.js","components/GeneralDetail.js","components/DeathsHistory.js","components/ConfirmedHistory.js","containers/Detail.js","components/Navbar.js","Routes.js","index.js","styles/FilterForm.module.css"],"names":["module","exports","CREATE_FILTER","CREATE_CASE","CREATE_HISTORY_DEATHS","CREATE_HISTORY_CONFIRMED","createCase","cases","type","payload","defaultFilter","continent","maxCases","minCases","maxDeaths","minDeaths","filterReducer","state","action","defaultCases","gatherCasesInformations","actionCreator","a","options","method","headers","Accept","fetch","response","json","data","CountryItem","country","name","className","styles","listing","to","pathname","number","confirmed","deaths","recovered","continents","FilterForm","clickHandle","filter","changeHandle","e","value","target","id","parseInt","filterForm","htmlFor","onChange","map","con","infoType","input_label","GlobalInformations","world","container","population","mapDispatchToProps","createFilter","connect","countries","Object","keys","useEffect","entries","row","c","All","length","place","Global","newFilter","list","GeneralDetail","information","capital_city","danger","safe","DeathsHistory","dates","dataList","splice","d","history","ConfirmedHistory","requestHistory","nameCountry","createHistoryConfirmed","createHistoryDeaths","deathsResponse","confirmedResponse","deathsHistory","confirmedHistory","location","countryData","bigContainer","Navbar","navbar","Routes","exact","path","component","List","Detail","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b06766f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__CBe-k\",\"number\":\"History_number__30zhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GlobalInformations_container__2NLOZ\",\"number\":\"GlobalInformations_number__HeDz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listing\":\"CountryItem_listing__1ZNV9\",\"number\":\"CountryItem_number__2zocP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigContainer\":\"Detail_bigContainer__2SaSu\",\"container\":\"Detail_container__2hAnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__2G_ZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1HfJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GeneralDetail_container__1R7kA\",\"information\":\"GeneralDetail_information__3xwpH\",\"number\":\"GeneralDetail_number__3EOtw\",\"danger\":\"GeneralDetail_danger__1kSAX\",\"safe\":\"GeneralDetail_safe__2JmnY\"};","const CREATE_FILTER = 'CREATE_FILTER';\nconst CREATE_CASE = 'CREATE_CASE';\nconst CREATE_HISTORY_DEATHS = 'CREATE_HISTORY_DEATHS';\nconst CREATE_HISTORY_CONFIRMED = 'CREATE_HISTORY_CONFIRMED';\n\nconst createFilter = filter => ({\n  type: CREATE_FILTER,\n  payload: filter,\n});\n\nconst createCase = cases => ({\n  type: CREATE_CASE,\n  payload: cases,\n});\n\nconst createHistoryDeaths = deaths => ({\n  type: CREATE_HISTORY_DEATHS,\n  payload: deaths,\n});\nconst createHistoryConfirmed = confirmed => ({\n  type: CREATE_HISTORY_CONFIRMED,\n  payload: confirmed,\n});\n\nexport {\n  CREATE_FILTER, createFilter, CREATE_CASE, createCase, CREATE_HISTORY_DEATHS,\n  CREATE_HISTORY_CONFIRMED, createHistoryDeaths, createHistoryConfirmed,\n};\n","import { CREATE_FILTER } from '../actions/index';\n\nconst defaultFilter = {\n  continent: 'All',\n  maxCases: -1,\n  minCases: 0,\n  maxDeaths: -1,\n  minDeaths: 0,\n};\nconst filterReducer = (state = defaultFilter, action) => {\n  switch (action.type) {\n    case CREATE_FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  CREATE_CASE, CREATE_HISTORY_CONFIRMED, CREATE_HISTORY_DEATHS,\n} from '../actions/index';\n\nconst defaultCases = {};\n\nexport const gatherCasesInformations = async actionCreator => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const response = await fetch('https://covid-api.mmediagroup.fr/v1/cases', options);\n    const data = await response.json();\n    actionCreator(data);\n  } catch (error) {\n    actionCreator(error);\n  }\n};\n\nexport const casesReducer = (state = defaultCases, action) => {\n  switch (action.type) {\n    case CREATE_CASE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const deathsHistoryReducer = (state = defaultCases, action) => {\n  switch (action.type) {\n    case CREATE_HISTORY_DEATHS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const confirmedHistoryReducer = (state = defaultCases, action) => {\n  switch (action.type) {\n    case CREATE_HISTORY_CONFIRMED:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from '../styles/CountryItem.module.css';\n\nfunction CountryItem({ country, name }) {\n  return (\n    <div className={styles.listing}>\n      <p>\n        <Link to={{ pathname: '/country', state: { country: name } }}>{ name }</Link>\n      </p>\n      <p>\n        Confirmed cases:\n        {' '}\n        <span className={styles.number}>\n          {country.confirmed}\n        </span>\n      </p>\n      <p>\n        Deaths:\n        {' '}\n        <span className={styles.number}>\n          {country.deaths}\n        </span>\n      </p>\n      <p>\n        Recovery:\n        {' '}\n        <span className={styles.number}>\n          {country.recovered}\n        </span>\n      </p>\n\n    </div>\n  );\n}\n\nCountryItem.propTypes = {\n  country: PropTypes.objectOf(PropTypes.any).isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default CountryItem;\n","import PropTypes from 'prop-types';\nimport styles from '../styles/FilterForm.module.css';\n\nconst continents = ['All', 'Africa', 'Asia', 'North America', 'South America', 'Oceania', 'Europe'];\nconst FilterForm = ({ clickHandle, filter }) => {\n  const changeHandle = e => {\n    let {\n      continent, maxCases, minCases, maxDeaths, minDeaths,\n    } = filter;\n    const { value } = e.target;\n    switch (e.target.id) {\n      case 'min-Cases':\n        minCases = parseInt(value, 10);\n        break;\n\n      case 'max-Cases':\n        maxCases = parseInt(value, 10);\n        break;\n\n      case 'min-Deaths':\n        minDeaths = parseInt(value, 10);\n        break;\n\n      case 'max-Deaths':\n        maxDeaths = parseInt(value, 10);\n        break;\n\n      default:\n        continent = value;\n        break;\n    }\n    clickHandle({\n      continent, maxCases, minCases, maxDeaths, minDeaths,\n    });\n  };\n  return (\n    <form className={styles.filterForm}>\n      <label htmlFor=\"continent\">\n        Continent:\n        <select id=\"continent\" name=\"continent\" value={filter.continent} onChange={changeHandle}>\n          {continents.map(con => (\n            <option value={con} key={con}>{con}</option>\n          ))}\n        </select>\n      </label>\n\n      <div className={styles.infoType}>\n        <label htmlFor=\"min-Cases\">\n          <span className={styles.input_label}>\n            Minimun number of cases:\n          </span>\n          <input type=\"number\" id=\"min-Cases\" name=\"min-Cases\" value={filter.minCases} onChange={changeHandle} />\n        </label>\n\n        <label htmlFor=\"max-Cases\">\n          <span className={styles.input_label}>\n            Maximun number of cases:\n          </span>\n          <input type=\"number\" id=\"max-Cases\" name=\"max-Cases\" value={filter.maxCases} onChange={changeHandle} />\n        </label>\n      </div>\n\n      <div className={styles.infoType}>\n\n        <label htmlFor=\"min-Deaths\">\n          <span className={styles.input_label}>\n            Minimun number of deaths:\n          </span>\n          <input type=\"number\" id=\"min-Deaths\" name=\"min-Deaths\" value={filter.minDeaths} onChange={changeHandle} />\n        </label>\n\n        <label htmlFor=\"max-Deaths\">\n          <span className={styles.input_label}>\n            Maximun number of deaths:\n          </span>\n          <input type=\"number\" id=\"max-Deaths\" name=\"max-Deaths\" value={filter.maxDeaths} onChange={changeHandle} />\n        </label>\n      </div>\n\n    </form>\n  );\n};\n\nFilterForm.propTypes = {\n  clickHandle: PropTypes.func.isRequired,\n  filter: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default FilterForm;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '../styles/GlobalInformations.module.css';\n\nconst GlobalInformations = ({ world }) => (\n  <>\n    <div className={styles.container}>\n      <div>\n        Population in the world:\n        {' '}\n        <span className={styles.number}>\n          {world.population}\n        </span>\n      </div>\n      <div>\n        Confirmed cases in the world:\n        {' '}\n        <span className={styles.number}>\n          {world.confirmed}\n        </span>\n      </div>\n      <div>\n        Deaths in the world:\n        {' '}\n        <span className={styles.number}>\n          {world.deaths}\n        </span>\n      </div>\n      <div>\n        Total of recovered Persons in the world:\n        {' '}\n        <span className={styles.number}>\n          {world.recovered}\n        </span>\n      </div>\n    </div>\n  </>\n);\n\nGlobalInformations.propTypes = {\n  world: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default GlobalInformations;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CountryItem from '../components/CountryItem';\nimport FilterForm from '../components/FilterForm';\nimport GlobalInformations from '../components/GlobalInformations';\nimport { createFilter, createCase } from '../actions/index';\nimport { gatherCasesInformations } from '../reducers/cases';\nimport styles from '../styles/List.module.css';\n\nconst List = ({\n  filter, cases, createFilter, createCase,\n}) => {\n  let countries = Object.keys(cases);\n\n  useEffect(() => {\n    if (countries === null) {\n      gatherCasesInformations(createCase);\n    }\n  }, []);\n\n  const clickHandle = newFilter => {\n    createFilter(newFilter);\n  };\n\n  countries = Object.entries(cases).filter(row => {\n    const c = row[1].All;\n    return (c.continent === filter.continent || filter.continent === 'All')\n            && (filter.maxCases < 0 || c.confirmed <= filter.maxCases)\n            && (filter.minCases === 0 || c.confirmed >= filter.minCases)\n            && (filter.maxDeaths < 0 || c.deaths <= filter.maxDeaths)\n            && (filter.minDeaths === 0 || c.deaths >= filter.minDeaths);\n  })\n    .map(e => e[0]);\n\n  if (countries.length > 0) {\n    countries = countries.filter(e => e !== 'Global').map(place => <CountryItem key={place} country={cases[place].All} name={place} />);\n  } else {\n    countries = null;\n  }\n  const world = countries !== null ? <GlobalInformations world={cases.Global.All} /> : null;\n  return (\n    <>\n      <FilterForm filter={filter} clickHandle={clickHandle} />\n      {world}\n      <div className={styles.list}>\n        {countries}\n      </div>\n    </>\n  );\n};\n\nList.propTypes = {\n  filter: PropTypes.objectOf(PropTypes.any).isRequired,\n  cases: PropTypes.objectOf(PropTypes.any).isRequired,\n  createFilter: PropTypes.func.isRequired,\n  createCase: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  cases: state.cases,\n});\n\nconst mapDispatchToProps = {\n  createFilter: filter => createFilter(filter),\n  createCase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '../styles/GeneralDetail.module.css';\n\nconst GeneralDetail = ({ country }) => (\n  <div className={styles.container}>\n    <div className={styles.information}>\n      The capital:\n      {' '}\n      <span className={styles.number}>\n        {country.capital_city}\n      </span>\n    </div>\n\n    <div className={styles.information}>\n      Population:\n      {' '}\n      <span className={styles.number}>\n        {country.population}\n      </span>\n    </div>\n\n    <div className={styles.information}>\n      confirmed:\n      {' '}\n      <span className={`${styles.number} ${styles.danger}`}>\n        {country.confirmed}\n      </span>\n      {' '}\n      confirmed case\n    </div>\n\n    <div className={styles.information}>\n      <span className={`${styles.number} ${styles.danger}`}>\n        {country.deaths}\n      </span>\n      {' '}\n      deaths\n    </div>\n\n    <div className={styles.information}>\n      <span className={`${styles.number} ${styles.safe}`}>\n        {country.recovered}\n      </span>\n      {' '}\n      recovered persons\n    </div>\n  </div>\n);\n\nGeneralDetail.propTypes = {\n  country: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default GeneralDetail;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '../styles/History.module.css';\n\nconst DeathsHistory = ({ country }) => {\n  const { dates } = country;\n  const dataList = Object.keys(dates).splice(0, 30).map(d => (\n    <li key={d}>\n      {d}\n      :\n      {' '}\n      <span className={styles.number}>\n        {dates[d]}\n      </span>\n      {' '}\n    </li>\n  ));\n  return (\n    <div className={styles.history}>\n      <h2>Deaths in the last 30 days</h2>\n      <ul>\n        {dataList}\n      </ul>\n    </div>\n  );\n};\nDeathsHistory.propTypes = {\n  country: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default DeathsHistory;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '../styles/History.module.css';\n\nconst ConfirmedHistory = ({ country }) => {\n  const { dates } = country;\n  const dataList = Object.keys(dates).splice(0, 30).map(d => (\n    <li key={d}>\n      {d}\n      :\n      {' '}\n      <span className={styles.number}>\n        {dates[d]}\n      </span>\n      {' '}\n    </li>\n  ));\n  return (\n    <div className={styles.history}>\n      <h2>Confirmed cases in the last 30 days</h2>\n      <ul>\n        {dataList}\n      </ul>\n    </div>\n  );\n};\nConfirmedHistory.propTypes = {\n  country: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ConfirmedHistory;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createHistoryDeaths, createHistoryConfirmed, createCase } from '../actions/index';\nimport GeneralDetail from '../components/GeneralDetail';\nimport DeathsHistory from '../components/DeathsHistory';\nimport ConfirmedHistory from '../components/ConfirmedHistory';\nimport { gatherCasesInformations } from '../reducers/cases';\nimport styles from '../styles/Detail.module.css';\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed,\n  createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\nconst Detail = ({\n  location, data, createHistoryConfirmed, createHistoryDeaths, deaths, confirmed, createCase,\n}) => {\n  const { country } = location.state;\n\n  useEffect(() => {\n    if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n      requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n      if (Object.keys(data).length === 0) {\n        gatherCasesInformations(createCase);\n      }\n    }\n  }, []);\n\n  if (Object.keys(data).length === 0) {\n    return (\n      <p>Please wait</p>\n    );\n  }\n\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n  if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n    deathsHistory = null;\n  } else {\n    deathsHistory = (\n      <DeathsHistory country={deaths.All} />\n    );\n    confirmedHistory = (\n      <ConfirmedHistory country={confirmed.All} />\n    );\n  }\n\n  return (\n    <div className={styles.bigContainer}>\n      <GeneralDetail country={countryData} />\n      <div className={styles.container}>\n        {deathsHistory}\n        {confirmedHistory}\n      </div>\n    </div>\n  );\n};\n\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired,\n  createCase: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory,\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths,\n  createCase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import { Link } from 'react-router-dom';\nimport styles from '../styles/Navbar.module.css';\n\nconst Navbar = () => (\n  <div className={styles.navbar}>\n    <Link to=\"/\">Home</Link>\n    <h1>COVID-19 AROUND THE WORLD</h1>\n    <span>Get the last numbers of cases, deaths, and  recovering</span>\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport List from './containers/List';\nimport Detail from './containers/Detail';\nimport Navbar from './components/Navbar';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/\" component={List} />\n      <Route path=\"/country\" component={Detail} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport filterReducer from './reducers/filter';\nimport {\n  casesReducer, deathsHistoryReducer, confirmedHistoryReducer,\n} from './reducers/cases';\nimport Routes from './Routes';\n\nconst rootReducer = combineReducers({\n  cases: casesReducer,\n  filter: filterReducer,\n  deathsHistory: deathsHistoryReducer,\n  confirmedHistory: confirmedHistoryReducer,\n});\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n/* eslint-enable */\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"FilterForm_filterForm__kbdY0\",\"infoType\":\"FilterForm_infoType__3ixbc\",\"input_label\":\"FilterForm_input_label__Jl9Xt\"};"],"sourceRoot":""}