{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst requestHistory = async nameCountry => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    console.log(deaths);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst Detail = ({\n  location,\n  data\n}) => {\n  const {\n    country\n  } = location.state;\n  requestHistory(country);\n\n  if (Object.keys(data).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  const countryData = data[country].All;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go back home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello world in our application! this is a Detail page concerning\", ' ', country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"The capital:\", ' ', countryData.capital_city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Population:\", ' ', countryData.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"confirmed:\", ' ', countryData.confirmed, ' ', \"confirmed case\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [countryData.deaths, ' ', \"deaths\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [countryData.recovered, ' ', \"recovered persons\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Detail;\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases\n});\n\nexport default connect(mapStateToProps)(Detail);\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js"],"names":["PropTypes","React","connect","Link","requestHistory","nameCountry","options","method","headers","Accept","deathsResponse","fetch","deaths","json","console","log","error","Detail","location","data","country","state","Object","keys","length","countryData","All","capital_city","population","confirmed","recovered","propTypes","objectOf","any","isRequired","mapStateToProps","cases"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,cAAc,GAAG,MAAMC,WAAN,IAAqB;AAC1C,MAAI;AACF,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAFK,KAAhB;AAOA,UAAMC,cAAc,GAAG,MAAMC,KAAK,CAAE,uDAAsDN,WAAY,gBAApE,EAAqFC,OAArF,CAAlC;AACA,UAAMM,MAAM,GAAG,MAAMF,cAAc,CAACG,IAAf,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAXD,CAWE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAfD;;AAgBA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcF,QAAQ,CAACG,KAA7B;AACAjB,EAAAA,cAAc,CAACgB,OAAD,CAAd;;AACA,MAAIE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,QAAMC,WAAW,GAAGN,IAAI,CAACC,OAAD,CAAJ,CAAcM,GAAlC;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qFAEG,GAFH,EAGGN,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,8BACE;AAAA,mCAEG,GAFH,EAGGK,WAAW,CAACE,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,kCAEG,GAFH,EAGGF,WAAW,CAACG,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAA,iCAEG,GAFH,EAGGH,WAAW,CAACI,SAHf,EAIG,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAA,mBACGJ,WAAW,CAACb,MADf,EAEG,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAuBE;AAAA,mBACGa,WAAW,CAACK,SADf,EAEG,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAuCD,CAjDD;;KAAMb,M;AAmDNA,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,QAAQ,EAAElB,SAAS,CAACgC,QAAV,CAAmBhC,SAAS,CAACiC,GAA7B,EAAkCC,UAD3B;AAEjBf,EAAAA,IAAI,EAAEnB,SAAS,CAACgC,QAAV,CAAmBhC,SAAS,CAACiC,GAA7B,EAAkCC;AAFvB,CAAnB;;AAKA,MAAMC,eAAe,GAAGd,KAAK,KAAK;AAChCF,EAAAA,IAAI,EAAEE,KAAK,CAACe;AADoB,CAAL,CAA7B;;AAIA,eAAelC,OAAO,CAACiC,eAAD,CAAP,CAAyBlB,MAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst requestHistory = async nameCountry => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    console.log(deaths);\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst Detail = ({ location, data }) => {\n  const { country } = location.state;\n  requestHistory(country);\n  if (Object.keys(data).length === 0) {\n    return (\n      <p>Please wait</p>\n    );\n  }\n  const countryData = data[country].All;\n\n  return (\n    <>\n      <Link to=\"/\">Go back home</Link>\n      <p>\n        Hello world in our application! this is a Detail page concerning\n        {' '}\n        {country}\n      </p>\n      <ul>\n        <li>\n          The capital:\n          {' '}\n          {countryData.capital_city}\n        </li>\n        <li>\n          Population:\n          {' '}\n          {countryData.population}\n        </li>\n        <li>\n          confirmed:\n          {' '}\n          {countryData.confirmed}\n          {' '}\n          confirmed case\n        </li>\n        <li>\n          {countryData.deaths}\n          {' '}\n          deaths\n        </li>\n        <li>\n          {countryData.recovered}\n          {' '}\n          recovered persons\n        </li>\n      </ul>\n    </>\n  );\n};\n\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n});\n\nexport default connect(mapStateToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}