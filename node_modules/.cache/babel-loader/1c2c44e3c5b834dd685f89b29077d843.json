{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createHistoryDeaths, createHistoryConfirmed } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed, createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\n\nconst Detail = ({\n  location,\n  data,\n  createHistoryConfirmed,\n  createHistoryDeaths,\n  deaths,\n  confirmed\n}) => {\n  const {\n    country\n  } = location.state;\n\n  if (Object.keys(data).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(deaths);\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n\n  if (Object.keys(deaths.length) === 0 || deaths.All.country !== country) {\n    requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n    deathsHistory = null;\n  } else {\n    deathsHistory = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [deaths.All.country, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n    confirmedHistory = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: confirmed.All.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go back home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello world in our application! this is a Detail page concerning\", ' ', country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"The capital:\", ' ', countryData.capital_city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Population:\", ' ', countryData.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"confirmed:\", ' ', countryData.confirmed, ' ', \"confirmed case\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [countryData.deaths, ' ', \"deaths\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [countryData.recovered, ' ', \"recovered persons\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), deathsHistory, confirmedHistory]\n  }, void 0, true);\n};\n\n_c = Detail;\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js"],"names":["PropTypes","React","connect","Link","createHistoryDeaths","createHistoryConfirmed","requestHistory","nameCountry","options","method","headers","Accept","deathsResponse","fetch","deaths","json","confirmedResponse","confirmed","error","Detail","location","data","country","state","Object","keys","length","console","log","countryData","All","deathsHistory","confirmedHistory","capital_city","population","recovered","propTypes","objectOf","any","isRequired","func","mapStateToProps","cases","mapDispatchToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createHistoryDeaths, createHistoryConfirmed } from '../actions/index';\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed,\n  createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\nconst Detail = ({\n  location, data, createHistoryConfirmed, createHistoryDeaths, deaths, confirmed,\n}) => {\n  const { country } = location.state;\n\n  if (Object.keys(data).length === 0) {\n    return (\n      <p>Please wait</p>\n    );\n  }\n  console.log(deaths);\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n  if (Object.keys(deaths.length) === 0 || deaths.All.country !== country) {\n    requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n    deathsHistory = null;\n  } else {\n    deathsHistory = (\n      <div>\n        {deaths.All.country}\n        ;\n      </div>\n    );\n    confirmedHistory = (\n      <div>\n        {confirmed.All.country}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Link to=\"/\">Go back home</Link>\n      <p>\n        Hello world in our application! this is a Detail page concerning\n        {' '}\n        {country}\n      </p>\n      <ul>\n        <li>\n          The capital:\n          {' '}\n          {countryData.capital_city}\n        </li>\n        <li>\n          Population:\n          {' '}\n          {countryData.population}\n        </li>\n        <li>\n          confirmed:\n          {' '}\n          {countryData.confirmed}\n          {' '}\n          confirmed case\n        </li>\n        <li>\n          {countryData.deaths}\n          {' '}\n          deaths\n        </li>\n        <li>\n          {countryData.recovered}\n          {' '}\n          recovered persons\n        </li>\n      </ul>\n      {deathsHistory}\n      {confirmedHistory}\n    </>\n  );\n};\n\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory,\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}