{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/components/FilterForm.js\";\nimport PropTypes from 'prop-types';\nimport styles from '../styles/FilterForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst continents = ['All', 'Africa', 'Asia', 'North America', 'South America', 'Oceania', 'Europe'];\n\nconst FilterForm = ({\n  clickHandle,\n  filter\n}) => {\n  const changeHandle = e => {\n    let {\n      continent,\n      maxCases,\n      minCases,\n      maxDeaths,\n      minDeaths\n    } = filter;\n    const {\n      value\n    } = e.target;\n\n    switch (e.target.id) {\n      case 'min-Cases':\n        minCases = parseInt(value, 10);\n        break;\n\n      case 'max-Cases':\n        maxCases = parseInt(value, 10);\n        break;\n\n      case 'min-Deaths':\n        minDeaths = parseInt(value, 10);\n        break;\n\n      case 'max-Deaths':\n        maxDeaths = parseInt(value, 10);\n        break;\n\n      default:\n        continent = value;\n        break;\n    }\n\n    clickHandle({\n      continent,\n      maxCases,\n      minCases,\n      maxDeaths,\n      minDeaths\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.filterForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"continent\",\n      children: [\"Continent:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"continent\",\n        name: \"continent\",\n        value: filter.continent,\n        onChange: changeHandle,\n        children: continents.map(con => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: con,\n          children: con\n        }, con, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.infoType,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"min-Cases\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.input_label,\n          children: \"Minimun number of cases:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"min-Cases\",\n          name: \"min-Cases\",\n          value: filter.minCases,\n          onChange: changeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"max-Cases\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.input_label,\n          children: \"Maximun number of cases:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"max-Cases\",\n          name: \"max-Cases\",\n          value: filter.maxCases,\n          onChange: changeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.infoType,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"min-Deaths\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.input_label,\n          children: \"Minimun number of deaths:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"min-Deaths\",\n          name: \"min-Deaths\",\n          value: filter.minDeaths,\n          onChange: changeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"max-Deaths\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.input_label,\n          children: \"Maximun number of deaths:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"max-Deaths\",\n          name: \"max-Deaths\",\n          value: filter.maxDeaths,\n          onChange: changeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FilterForm;\nFilterForm.propTypes = {\n  clickHandle: PropTypes.func.isRequired,\n  filter: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default FilterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterForm\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/components/FilterForm.js"],"names":["PropTypes","styles","continents","FilterForm","clickHandle","filter","changeHandle","e","continent","maxCases","minCases","maxDeaths","minDeaths","value","target","id","parseInt","filterForm","map","con","infoType","input_label","propTypes","func","isRequired","objectOf","any"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,eAA1B,EAA2C,eAA3C,EAA4D,SAA5D,EAAuE,QAAvE,CAAnB;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AAC9C,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,QAAI;AACFC,MAAAA,SADE;AACSC,MAAAA,QADT;AACmBC,MAAAA,QADnB;AAC6BC,MAAAA,SAD7B;AACwCC,MAAAA;AADxC,QAEAP,MAFJ;AAGA,UAAM;AAAEQ,MAAAA;AAAF,QAAYN,CAAC,CAACO,MAApB;;AACA,YAAQP,CAAC,CAACO,MAAF,CAASC,EAAjB;AACE,WAAK,WAAL;AACEL,QAAAA,QAAQ,GAAGM,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAnB;AACA;;AAEF,WAAK,WAAL;AACEJ,QAAAA,QAAQ,GAAGO,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAnB;AACA;;AAEF,WAAK,YAAL;AACED,QAAAA,SAAS,GAAGI,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAApB;AACA;;AAEF,WAAK,YAAL;AACEF,QAAAA,SAAS,GAAGK,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAApB;AACA;;AAEF;AACEL,QAAAA,SAAS,GAAGK,KAAZ;AACA;AAnBJ;;AAqBAT,IAAAA,WAAW,CAAC;AACVI,MAAAA,SADU;AACCC,MAAAA,QADD;AACWC,MAAAA,QADX;AACqBC,MAAAA,SADrB;AACgCC,MAAAA;AADhC,KAAD,CAAX;AAGD,GA7BD;;AA8BA,sBACE;AAAM,IAAA,SAAS,EAAEX,MAAM,CAACgB,UAAxB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA,4CAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAwC,QAAA,KAAK,EAAEZ,MAAM,CAACG,SAAtD;AAAiE,QAAA,QAAQ,EAAEF,YAA3E;AAAA,kBACGJ,UAAU,CAACgB,GAAX,CAAeC,GAAG,iBACjB;AAAQ,UAAA,KAAK,EAAEA,GAAf;AAAA,oBAA+BA;AAA/B,WAAyBA,GAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACmB,QAAvB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAEnB,MAAM,CAACoB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,WAAxB;AAAoC,UAAA,IAAI,EAAC,WAAzC;AAAqD,UAAA,KAAK,EAAEhB,MAAM,CAACK,QAAnE;AAA6E,UAAA,QAAQ,EAAEJ;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAEL,MAAM,CAACoB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,WAAxB;AAAoC,UAAA,IAAI,EAAC,WAAzC;AAAqD,UAAA,KAAK,EAAEhB,MAAM,CAACI,QAAnE;AAA6E,UAAA,QAAQ,EAAEH;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eA0BE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACmB,QAAvB;AAAA,8BAEE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAEnB,MAAM,CAACoB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,YAAxB;AAAqC,UAAA,IAAI,EAAC,YAA1C;AAAuD,UAAA,KAAK,EAAEhB,MAAM,CAACO,SAArE;AAAgF,UAAA,QAAQ,EAAEN;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAEL,MAAM,CAACoB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,YAAxB;AAAqC,UAAA,IAAI,EAAC,YAA1C;AAAuD,UAAA,KAAK,EAAEhB,MAAM,CAACM,SAArE;AAAgF,UAAA,QAAQ,EAAEL;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA7ED;;KAAMH,U;AA+ENA,UAAU,CAACmB,SAAX,GAAuB;AACrBlB,EAAAA,WAAW,EAAEJ,SAAS,CAACuB,IAAV,CAAeC,UADP;AAErBnB,EAAAA,MAAM,EAAEL,SAAS,CAACyB,QAAV,CAAmBzB,SAAS,CAAC0B,GAA7B,EAAkCF;AAFrB,CAAvB;AAKA,eAAerB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport styles from '../styles/FilterForm.module.css';\n\nconst continents = ['All', 'Africa', 'Asia', 'North America', 'South America', 'Oceania', 'Europe'];\nconst FilterForm = ({ clickHandle, filter }) => {\n  const changeHandle = e => {\n    let {\n      continent, maxCases, minCases, maxDeaths, minDeaths,\n    } = filter;\n    const { value } = e.target;\n    switch (e.target.id) {\n      case 'min-Cases':\n        minCases = parseInt(value, 10);\n        break;\n\n      case 'max-Cases':\n        maxCases = parseInt(value, 10);\n        break;\n\n      case 'min-Deaths':\n        minDeaths = parseInt(value, 10);\n        break;\n\n      case 'max-Deaths':\n        maxDeaths = parseInt(value, 10);\n        break;\n\n      default:\n        continent = value;\n        break;\n    }\n    clickHandle({\n      continent, maxCases, minCases, maxDeaths, minDeaths,\n    });\n  };\n  return (\n    <form className={styles.filterForm}>\n      <label htmlFor=\"continent\">\n        Continent:\n        <select id=\"continent\" name=\"continent\" value={filter.continent} onChange={changeHandle}>\n          {continents.map(con => (\n            <option value={con} key={con}>{con}</option>\n          ))}\n        </select>\n      </label>\n\n      <div className={styles.infoType}>\n        <label htmlFor=\"min-Cases\">\n          <span className={styles.input_label}>\n            Minimun number of cases:\n          </span>\n          <input type=\"number\" id=\"min-Cases\" name=\"min-Cases\" value={filter.minCases} onChange={changeHandle} />\n        </label>\n\n        <label htmlFor=\"max-Cases\">\n          <span className={styles.input_label}>\n            Maximun number of cases:\n          </span>\n          <input type=\"number\" id=\"max-Cases\" name=\"max-Cases\" value={filter.maxCases} onChange={changeHandle} />\n        </label>\n      </div>\n\n      <div className={styles.infoType}>\n\n        <label htmlFor=\"min-Deaths\">\n          <span className={styles.input_label}>\n            Minimun number of deaths:\n          </span>\n          <input type=\"number\" id=\"min-Deaths\" name=\"min-Deaths\" value={filter.minDeaths} onChange={changeHandle} />\n        </label>\n\n        <label htmlFor=\"max-Deaths\">\n          <span className={styles.input_label}>\n            Maximun number of deaths:\n          </span>\n          <input type=\"number\" id=\"max-Deaths\" name=\"max-Deaths\" value={filter.maxDeaths} onChange={changeHandle} />\n        </label>\n      </div>\n\n    </form>\n  );\n};\n\nFilterForm.propTypes = {\n  clickHandle: PropTypes.func.isRequired,\n  filter: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default FilterForm;\n"]},"metadata":{},"sourceType":"module"}