{"ast":null,"code":"import _regeneratorRuntime from\"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{connect}from'react-redux';import{createHistoryDeaths,createHistoryConfirmed,createCase}from'../actions/index';import GeneralDetail from'../components/GeneralDetail';import DeathsHistory from'../components/DeathsHistory';import ConfirmedHistory from'../components/ConfirmedHistory';import{gatherCasesInformations}from'../reducers/cases';import styles from'../styles/Detail.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var requestHistory=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(nameCountry,createHistoryConfirmed,createHistoryDeaths){var options,deathsResponse,deaths,confirmedResponse,confirmed;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;options={method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}};_context.next=4;return fetch(\"https://covid-api.mmediagroup.fr/v1/history?country=\".concat(nameCountry,\"&status=deaths\"),options);case 4:deathsResponse=_context.sent;_context.next=7;return deathsResponse.json();case 7:deaths=_context.sent;_context.next=10;return fetch(\"https://covid-api.mmediagroup.fr/v1/history?country=\".concat(nameCountry,\"&status=confirmed\"),options);case 10:confirmedResponse=_context.sent;_context.next=13;return confirmedResponse.json();case 13:confirmed=_context.sent;createHistoryConfirmed(confirmed);createHistoryDeaths(deaths);_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);createHistoryConfirmed(_context.t0);createHistoryDeaths(_context.t0);case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,18]]);}));return function requestHistory(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var Detail=function Detail(_ref2){var location=_ref2.location,data=_ref2.data,createHistoryConfirmed=_ref2.createHistoryConfirmed,createHistoryDeaths=_ref2.createHistoryDeaths,deaths=_ref2.deaths,confirmed=_ref2.confirmed,createCase=_ref2.createCase;var country=location.state.country;useEffect(function(){if(Object.keys(deaths).length===0||deaths.All.country!==country){requestHistory(country,createHistoryConfirmed,createHistoryDeaths);if(Object.keys(data).length===0){gatherCasesInformations(createCase);}}},[]);if(Object.keys(data).length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"Please wait\"});}var countryData=data[country].All;var deathsHistory=null;var confirmedHistory=null;if(Object.keys(deaths).length===0||deaths.All.country!==country){deathsHistory=null;}else{deathsHistory=/*#__PURE__*/_jsx(DeathsHistory,{country:deaths.All});confirmedHistory=/*#__PURE__*/_jsx(ConfirmedHistory,{country:confirmed.All});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.bigContainer,children:[/*#__PURE__*/_jsx(GeneralDetail,{country:countryData}),/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[deathsHistory,confirmedHistory]})]});};var mapStateToProps=function mapStateToProps(state){return{data:state.cases,deaths:state.deathsHistory,confirmed:state.confirmedHistory};};var mapDispatchToProps={createHistoryConfirmed:createHistoryConfirmed,createHistoryDeaths:createHistoryDeaths,createCase:createCase};export default connect(mapStateToProps,mapDispatchToProps)(Detail);","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js"],"names":["React","useEffect","connect","createHistoryDeaths","createHistoryConfirmed","createCase","GeneralDetail","DeathsHistory","ConfirmedHistory","gatherCasesInformations","styles","requestHistory","nameCountry","options","method","headers","Accept","fetch","deathsResponse","json","deaths","confirmedResponse","confirmed","Detail","location","data","country","state","Object","keys","length","All","countryData","deathsHistory","confirmedHistory","bigContainer","container","mapStateToProps","cases","mapDispatchToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createHistoryDeaths, createHistoryConfirmed, createCase } from '../actions/index';\nimport GeneralDetail from '../components/GeneralDetail';\nimport DeathsHistory from '../components/DeathsHistory';\nimport ConfirmedHistory from '../components/ConfirmedHistory';\nimport { gatherCasesInformations } from '../reducers/cases';\nimport styles from '../styles/Detail.module.css';\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed,\n  createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\nconst Detail = ({\n  location, data, createHistoryConfirmed, createHistoryDeaths, deaths, confirmed, createCase,\n}) => {\n  const { country } = location.state;\n\n  useEffect(() => {\n    if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n      requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n      if (Object.keys(data).length === 0) {\n        gatherCasesInformations(createCase);\n      }\n    }\n  }, []);\n\n  if (Object.keys(data).length === 0) {\n    return (\n      <p>Please wait</p>\n    );\n  }\n\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n  if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n    deathsHistory = null;\n  } else {\n    deathsHistory = (\n      <DeathsHistory country={deaths.All} />\n    );\n    confirmedHistory = (\n      <ConfirmedHistory country={confirmed.All} />\n    );\n  }\n\n  return (\n    <div className={styles.bigContainer}>\n      <GeneralDetail country={countryData} />\n      <div className={styles.container}>\n        {deathsHistory}\n        {confirmedHistory}\n      </div>\n    </div>\n  );\n};\n\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired,\n  createCase: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory,\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths,\n  createCase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}