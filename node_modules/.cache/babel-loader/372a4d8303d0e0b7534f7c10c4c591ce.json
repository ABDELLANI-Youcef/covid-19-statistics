{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createHistoryDeaths, createHistoryConfirmed } from '../actions/index';\nimport GeneralDetail from '../components/GeneralDetail';\nimport DeathsHistory from '../components/DeathsHistory';\nimport ConfirmedHistory from '../components/ConfirmedHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed, createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\n\nconst Detail = ({\n  location,\n  data,\n  createHistoryConfirmed,\n  createHistoryDeaths,\n  deaths,\n  confirmed\n}) => {\n  _s();\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  const {\n    country\n  } = location.state;\n\n  if (Object.keys(data).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n\n  if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n    requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n    deathsHistory = null;\n  } else {\n    deathsHistory = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DeathsHistory, {\n        country: deaths.All\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n    confirmedHistory = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ConfirmedHistory, {\n        country: confirmed.All\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go back home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeneralDetail, {\n      country: countryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), deathsHistory, confirmedHistory]\n  }, void 0, true);\n};\n\n_s(Detail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Detail;\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/Detail.js"],"names":["PropTypes","React","useEffect","connect","Link","createHistoryDeaths","createHistoryConfirmed","GeneralDetail","DeathsHistory","ConfirmedHistory","requestHistory","nameCountry","options","method","headers","Accept","deathsResponse","fetch","deaths","json","confirmedResponse","confirmed","error","Detail","location","data","effect","cleanup","input","country","state","Object","keys","length","countryData","All","deathsHistory","confirmedHistory","propTypes","objectOf","any","isRequired","func","mapStateToProps","cases","mapDispatchToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createHistoryDeaths, createHistoryConfirmed } from '../actions/index';\nimport GeneralDetail from '../components/GeneralDetail';\nimport DeathsHistory from '../components/DeathsHistory';\nimport ConfirmedHistory from '../components/ConfirmedHistory';\n\nconst requestHistory = async (nameCountry, createHistoryConfirmed,\n  createHistoryDeaths) => {\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const deathsResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=deaths`, options);\n    const deaths = await deathsResponse.json();\n    const confirmedResponse = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${nameCountry}&status=confirmed`, options);\n    const confirmed = await confirmedResponse.json();\n    createHistoryConfirmed(confirmed);\n    createHistoryDeaths(deaths);\n  } catch (error) {\n    createHistoryConfirmed(error);\n    createHistoryDeaths(error);\n  }\n};\nconst Detail = ({\n  location, data, createHistoryConfirmed, createHistoryDeaths, deaths, confirmed,\n}) => {\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  const { country } = location.state;\n\n  if (Object.keys(data).length === 0) {\n    return (\n      <p>Please wait</p>\n    );\n  }\n  const countryData = data[country].All;\n  let deathsHistory = null;\n  let confirmedHistory = null;\n  if (Object.keys(deaths).length === 0 || deaths.All.country !== country) {\n    requestHistory(country, createHistoryConfirmed, createHistoryDeaths);\n    deathsHistory = null;\n  } else {\n    deathsHistory = (\n      <div>\n        <DeathsHistory country={deaths.All} />\n      </div>\n    );\n    confirmedHistory = (\n      <div>\n        <ConfirmedHistory country={confirmed.All} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Link to=\"/\">Go back home</Link>\n      <GeneralDetail country={countryData} />\n      {deathsHistory}\n      {confirmedHistory}\n    </>\n  );\n};\n\nDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  createHistoryConfirmed: PropTypes.func.isRequired,\n  createHistoryDeaths: PropTypes.func.isRequired,\n  deaths: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmed: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: state.cases,\n  deaths: state.deathsHistory,\n  confirmed: state.confirmedHistory,\n});\n\nconst mapDispatchToProps = {\n  createHistoryConfirmed,\n  createHistoryDeaths,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}