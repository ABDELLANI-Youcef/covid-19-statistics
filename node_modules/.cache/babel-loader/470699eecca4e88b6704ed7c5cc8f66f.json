{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/components/FilterForm.js\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst continents = ['All', 'Africa', 'Asia', 'North America', 'South America', 'Oceania', 'Europe'];\n\nconst FilterForm = ({\n  clickHandle,\n  filter\n}) => {\n  const changeHandle = e => {\n    clickHandle(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: true,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"continent\",\n      children: [\"Continent:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"continent\",\n        name: \"continent\",\n        value: filter.continent,\n        onChange: changeHandle,\n        children: continents.map(con => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: con,\n          children: con\n        }, con, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"min-Cases\",\n      children: [\"Minimun number of cases:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"min-Cases\",\n        name: \"min-Cases\",\n        value: filter.minCases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"max-Cases\",\n      children: [\"Maximun number of cases:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"max-Cases\",\n        name: \"max-Cases\",\n        value: filter.maxCases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"min-Deaths\",\n      children: [\"Minimun number of deaths:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"min-Deaths\",\n        name: \"min-Deaths\",\n        value: filter.minDeaths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"max-Deaths\",\n      children: [\"Maximun number of deaths:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"max-Deaths\",\n        name: \"max-Deaths\",\n        value: filter.maxDeaths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FilterForm;\nFilterForm.propTypes = {\n  clickHandle: PropTypes.func.isRequired,\n  filter: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default FilterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterForm\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/components/FilterForm.js"],"names":["PropTypes","continents","FilterForm","clickHandle","filter","changeHandle","e","target","value","continent","map","con","minCases","maxCases","minDeaths","maxDeaths","propTypes","func","isRequired","objectOf","any"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,eAA1B,EAA2C,eAA3C,EAA4D,SAA5D,EAAuE,QAAvE,CAAnB;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AAC9C,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBH,IAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,sBACE;AAAM,IAAA,QAAQ,MAAd;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA,4CAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAwC,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAAtD;AAAiE,QAAA,QAAQ,EAAEJ,YAA3E;AAAA,kBACGJ,UAAU,CAACS,GAAX,CAAeC,GAAG,iBACjB;AAAQ,UAAA,KAAK,EAAEA,GAAf;AAAA,oBAA+BA;AAA/B,WAAyBA,GAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA,0DAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,WAAxB;AAAoC,QAAA,IAAI,EAAC,WAAzC;AAAqD,QAAA,KAAK,EAAEP,MAAM,CAACQ;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA,0DAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,WAAxB;AAAoC,QAAA,IAAI,EAAC,WAAzC;AAAqD,QAAA,KAAK,EAAER,MAAM,CAACS;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAoBE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA,2DAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,YAAxB;AAAqC,QAAA,IAAI,EAAC,YAA1C;AAAuD,QAAA,KAAK,EAAET,MAAM,CAACU;AAArE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAyBE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA,2DAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,YAAxB;AAAqC,QAAA,IAAI,EAAC,YAA1C;AAAuD,QAAA,KAAK,EAAEV,MAAM,CAACW;AAArE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CArCD;;KAAMb,U;AAuCNA,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,WAAW,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADP;AAErBd,EAAAA,MAAM,EAAEJ,SAAS,CAACmB,QAAV,CAAmBnB,SAAS,CAACoB,GAA7B,EAAkCF;AAFrB,CAAvB;AAKA,eAAehB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\n\nconst continents = ['All', 'Africa', 'Asia', 'North America', 'South America', 'Oceania', 'Europe'];\nconst FilterForm = ({ clickHandle, filter }) => {\n  const changeHandle = e => {\n    clickHandle(e.target.value);\n  };\n  return (\n    <form onSubmit>\n      <label htmlFor=\"continent\">\n        Continent:\n        <select id=\"continent\" name=\"continent\" value={filter.continent} onChange={changeHandle}>\n          {continents.map(con => (\n            <option value={con} key={con}>{con}</option>\n          ))}\n        </select>\n      </label>\n\n      <label htmlFor=\"min-Cases\">\n        Minimun number of cases:\n        <input type=\"number\" id=\"min-Cases\" name=\"min-Cases\" value={filter.minCases} />\n      </label>\n\n      <label htmlFor=\"max-Cases\">\n        Maximun number of cases:\n        <input type=\"number\" id=\"max-Cases\" name=\"max-Cases\" value={filter.maxCases} />\n      </label>\n\n      <label htmlFor=\"min-Deaths\">\n        Minimun number of deaths:\n        <input type=\"number\" id=\"min-Deaths\" name=\"min-Deaths\" value={filter.minDeaths} />\n      </label>\n\n      <label htmlFor=\"max-Deaths\">\n        Maximun number of deaths:\n        <input type=\"number\" id=\"max-Deaths\" name=\"max-Deaths\" value={filter.maxDeaths} />\n      </label>\n\n    </form>\n  );\n};\n\nFilterForm.propTypes = {\n  clickHandle: PropTypes.func.isRequired,\n  filter: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default FilterForm;\n"]},"metadata":{},"sourceType":"module"}