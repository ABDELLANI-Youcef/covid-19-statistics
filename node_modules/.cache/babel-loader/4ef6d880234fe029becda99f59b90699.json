{"ast":null,"code":"var _jsxFileName = \"/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/List.js\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CountryItem from '../components/CountryItem';\nimport FilterForm from '../components/FilterForm';\nimport { createFilter } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  filter,\n  cases,\n  createFilter\n}) => {\n  let countries = Object.keys(cases);\n\n  const clickHandle = newFilter => {\n    createFilter(newFilter);\n  };\n\n  if (filter !== 'All') {\n    countries = Object.entries(countries);\n  }\n\n  if (countries.length > 0) {\n    countries = countries.map(place => /*#__PURE__*/_jsxDEV(CountryItem, {\n      country: place\n    }, place, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 40\n    }, this));\n  } else {\n    countries = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterForm, {\n      filter: filter,\n      clickHandle: clickHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello world in our application!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: '/country',\n        state: {\n          country: 'palestine'\n        }\n      },\n      children: \"More details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), countries]\n  }, void 0, true);\n};\n\n_c = List;\nList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  cases: PropTypes.objectOf(PropTypes.any).isRequired,\n  createFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  cases: state.cases\n});\n\nconst mapDispatchToProps = {\n  createFilter: filter => createFilter(filter)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/youcef/microverse/fullTime/REACT/covid-19-statistics/src/containers/List.js"],"names":["PropTypes","connect","Link","CountryItem","FilterForm","createFilter","List","filter","cases","countries","Object","keys","clickHandle","newFilter","entries","length","map","place","pathname","state","country","propTypes","string","isRequired","objectOf","any","func","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBH,EAAAA;AAAjB,CAAD,KAAqC;AAChD,MAAII,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAhB;;AACA,QAAMI,WAAW,GAAGC,SAAS,IAAI;AAC/BR,IAAAA,YAAY,CAACQ,SAAD,CAAZ;AACD,GAFD;;AAIA,MAAIN,MAAM,KAAK,KAAf,EAAsB;AACpBE,IAAAA,SAAS,GAAGC,MAAM,CAACI,OAAP,CAAeL,SAAf,CAAZ;AACD;;AAED,MAAIA,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACxBN,IAAAA,SAAS,GAAGA,SAAS,CAACO,GAAV,CAAcC,KAAK,iBAAI,QAAC,WAAD;AAAyB,MAAA,OAAO,EAAEA;AAAlC,OAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA,YAAvB,CAAZ;AACD,GAFD,MAEO;AACLR,IAAAA,SAAS,GAAG,EAAZ;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEF,MAApB;AAA4B,MAAA,WAAW,EAAEK;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEW,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAA/B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGX,SATH;AAAA,kBADF;AAaD,CA5BD;;KAAMH,I;AA8BNA,IAAI,CAACe,SAAL,GAAiB;AACfd,EAAAA,MAAM,EAAEP,SAAS,CAACsB,MAAV,CAAiBC,UADV;AAEff,EAAAA,KAAK,EAAER,SAAS,CAACwB,QAAV,CAAmBxB,SAAS,CAACyB,GAA7B,EAAkCF,UAF1B;AAGflB,EAAAA,YAAY,EAAEL,SAAS,CAAC0B,IAAV,CAAeH;AAHd,CAAjB;;AAMA,MAAMI,eAAe,GAAGR,KAAK,KAAK;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACZ,MADkB;AAEhCC,EAAAA,KAAK,EAAEW,KAAK,CAACX;AAFmB,CAAL,CAA7B;;AAKA,MAAMoB,kBAAkB,GAAG;AACzBvB,EAAAA,YAAY,EAAEE,MAAM,IAAIF,YAAY,CAACE,MAAD;AADX,CAA3B;AAIA,eAAeN,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtB,IAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CountryItem from '../components/CountryItem';\nimport FilterForm from '../components/FilterForm';\nimport { createFilter } from '../actions/index';\n\nconst List = ({ filter, cases, createFilter }) => {\n  let countries = Object.keys(cases);\n  const clickHandle = newFilter => {\n    createFilter(newFilter);\n  };\n\n  if (filter !== 'All') {\n    countries = Object.entries(countries);\n  }\n\n  if (countries.length > 0) {\n    countries = countries.map(place => <CountryItem key={place} country={place} />);\n  } else {\n    countries = '';\n  }\n  return (\n    <>\n      <FilterForm filter={filter} clickHandle={clickHandle} />\n      <p>\n        Hello world in our application!\n      </p>\n      <p>\n        {filter}\n      </p>\n      <Link to={{ pathname: '/country', state: { country: 'palestine' } }}>More details</Link>\n      {countries}\n    </>\n  );\n};\n\nList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  cases: PropTypes.objectOf(PropTypes.any).isRequired,\n  createFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  cases: state.cases,\n});\n\nconst mapDispatchToProps = {\n  createFilter: filter => createFilter(filter),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}